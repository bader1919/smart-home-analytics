services:
  # Neo4j Database for Graphiti
  neo4j:
    image: neo4j:5.26.0
    container_name: neo4j-graphiti
    restart: unless-stopped
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_config:/config
      - neo4j_plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/bader123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=2g
      - NEO4J_server_memory_pagecache_size=1g
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    ports:
      - "7474:7474"   # HTTP
      - "7687:7687"   # Bolt
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "bader123", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  # Redis Cache for Analytics
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Home Assistant Data Collector
  ha-collector:
    build:
      context: ./collector
      dockerfile: Dockerfile
    container_name: ha-data-collector
    restart: unless-stopped
    environment:
      - HOME_ASSISTANT_URL=${HOME_ASSISTANT_URL}
      - HOME_ASSISTANT_TOKEN=${HOME_ASSISTANT_TOKEN}
      - COLLECTION_INTERVAL=${COLLECTION_INTERVAL}
      - GROUP_ID=${GRAPHITI_GROUP_ID}
    volumes:
      - ./collector/config.json:/app/config.json:ro
      - collector_logs:/app/logs
    depends_on:
      - redis

  # Analytics Dashboard
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: analytics-dashboard
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - redis

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_config:
    driver: local
  neo4j_plugins:
    driver: local
  redis_data:
    driver: local
  collector_logs:
    driver: local
